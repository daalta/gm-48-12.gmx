<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sControl</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init spawn system and global vars

//launch all enemies?
global.lunch=false;
global.playerWon = false;


//a stack to save all enemies to.
//IS ACUTALLY A QUEUE
//BECAUSE DANIEL MAKES MISTAKES SOMETIMES
enemyStack=ds_queue_create()

//holds respawning enemies
global.enemyRespawnQueue = ds_queue_create();
enemyRespawnDelay = 60;
enemyRespawnTimer = 0;

spawner0=noone;
spawner1=noone;

spawnTimer=0 //delay between spawns

global.enemiesLiving = 0;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Screenshake stuff1

global.screenshakeStrength=0;//all these global variables are modified in the screenshake script
global.screenshakeSpeed=0.5;
global.screenshakeDecay=0.5; 
screenshakeCounter=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set global.lunch to false
global.lunch=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spawn enemies!

if(spawnTimer=0)
{

    spawnTimer=spawnEnemy(spawner0,spawner1,ds_queue_dequeue(enemyStack));
    if(spawnTimer == 0) {
        global.enemiesLiving++;
    }
    if(spawnTimer &lt; -1) {
        //Errored!
        spawnTimer = 0;
    }
}
else if(spawnTimer != -1)spawnTimer--

if(enemyRespawnTimer &lt;= 0) {
    if(!ds_queue_empty(global.enemyRespawnQueue)) {
        enemyRespawnTimer = enemyRespawnDelay;
        spawnEnemy(spawner0,spawner1,ds_queue_dequeue(global.enemyRespawnQueue));
        global.enemiesLiving++;
    }
} else {
    enemyRespawnTimer--;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shake screen if 


view_yview=sin(screenshakeCounter*global.screenshakeSpeed)*global.screenshakeStrength


//von 0 bis 59 in 60 frames



//oszilliert zwischen 0 und 1
if(global.screenshakeStrength&lt;=0)
{
    global.screenshakeStrength=0;
    screenshakeCounter=0;
}
else 
{
    global.screenshakeStrength-=global.screenshakeDecay;
    screenshakeCounter++;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Win Condition

if(spawnTimer == -1 &amp;&amp; global.enemiesLiving &lt;= 0) {
    global.playerWon = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///restart the room or game
if(keyboard_check(vk_shift)) {
    game_restart();
} else {
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// GOTO MainMenu
room_goto(rMainMenu);
audio_stop_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get spawn list from spawns.ini file to enemyStack

//Commands:
//99=End of file
//0= something went terrible wrong. never be 0.
//(because 0 might equal that there is no list! misunderstanding possible

//Enemy types:
//1=walker
//2=helmet
//3=heavy
//4, 5, 6 : Tier 2
//7, 8, 9 : Tier 3 

//Delays:
//10=0.5 seconds
//11=1 second
//12=2 seconds
//13=3 seconds
//...
//20=10 seconds

ini_open("levelData.ini");

//Read the section declared in the argument
sectionToRead=room_get_name(room);

//count number of spawned enemies.
enemyNumber=0;

while(ds_queue_tail(enemyStack)!=99)//read actual file, line by line per level
{
    lineJustRead=ini_read_real(sectionToRead,string(enemyNumber),0);
    if(lineJustRead == 0) {
        show_debug_message("GameCrash: Invalid Ini File! Read 0 when reading enemiy spawns");
        game_end();
        break;
    }
    ds_queue_enqueue(enemyStack,lineJustRead);
    enemyNumber++;
}
ini_close();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawns teleporters and remember their location

ini_open("levelData.ini");

//sections are titled after room names. we need the room name.
roomName=room_get_name(room);

//get spawner locations (only 1 may exist!!)
spawnerLocation0x=ini_read_real(roomName,"spawnerLocation0x",-1);
spawnerLocation0y=ini_read_real(roomName,"spawnerLocation0y",-1);
spawnerLocation1x=ini_read_real(roomName,"spawnerLocation1x",-1);
spawnerLocation1y=ini_read_real(roomName,"spawnerLocation1y",-1);

spawner0=instance_create(spawnerLocation0x,spawnerLocation0y,oSpawner);

//check if spawnerLocation f√ºr seconds spawner are valid
if(spawnerLocation1x!=-1)
    {
    spawner1=instance_create(spawnerLocation1x,spawnerLocation1y,oSpawner);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///change from tut level music to main music
if(room=rTransition)
{
    audio_stop_sound(musicTutorial);
    if(!audio_is_playing(musicTransition))
    {
        audio_play_sound(musicTransition,0,1);
    }
}else if(room=rLevel1)
{
    audio_stop_sound(musicTransition);
if(!audio_is_playing(musicLevel))
    {
    audio_play_sound(musicLevel,0,1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//launch all enemies?
global.lunch=false;

//a stack to save all enemies to.
//IS ACUTALLY A QUEUE
//BECAUSE DANIEL MAKES MISTAKES SOMETIMES
enemyStack=ds_queue_create()

spawner0=noone;
spawner1=noone;

spawnTimer=0 //delay between spawns

if(room=rIntro)
{
    timeline_index=timelineIntro;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="114">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check(vk_alt)) {
room_goto(room0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
